test <- bank.full[1:500]
test <- bank.full[1:500,]
bank.full <- read.csv("F:/assingment/LOGESTIC LINEAR REGRESSION/bank-full.csv", sep=";")
View(bank.full)
test <- bank.full[1:500,]
train <- bank.full[501:45211]
train <- bank.full[501:45211,]
library(dummies)
fit <- dummy.data.frame(bank.full,sep=".")
View(fit)
fit2 <- glm(y,data=fit)
fit2 <- glm(y.,data=fit)
fit2 <- glm(y~,data=fit,family"binomial")
fit2 <- glm(y~.,data=fit,family"binomial")
fit2 <- glm(y~.,data=bank.full,family"binomial")
fit2 <- glm(y.no,y.yes~.,data=fit,family"binomial")
fit2 <- glm(y.no,y.yes~.,data=fit,family="binomial")
fit2 <- glm(y~.,data=fit,family="binomial")
fit2 <- glm(y~.,data=bank.full,family="binomial")
View(fit2)
exp(coef(fit2))
prob <- predict(fit2,bank.full,type="response")
summary(fit2)
confusion<-table(prob>0.5,bank.full$y)
confusion
Accuracy<-sum(diag(confusion)/sum(confusion))
Accuracy
pred_values <- NULL
yes_no <- NULL
pred_values <- ifelse(prob>=0.5,1,0)
yes_no <- ifelse(prob>=0.5,"yes","no")
bank.full[,"prob"] <- prob
bank.full[,"pred_values"] <- pred_values
bank.full[,"yes_no"] <- yes_no
View(fit)
View(fit)
View(bank.full[,c(17,19,20)])
table(bank.full$y,bank.full$pred_values)
library(ROCR)
install.packages("ROCR")
library(ROCR)
rocrpred<-prediction(prob,bank.full$y)
rocrperf<-performance(rocrpred,'tpr','fpr')
str(rocrperf)
plot(rocrperf,colorize=T,text.adj=c(-0.2,1.7))
str(rocrperf)
rocr_cutoff <- data.frame(cut_off = rocrperf@alpha.values[[1]],fpr=rocrperf@x.values,tpr=rocrperf@y.values)
colnames(rocr_cutoff) <- c("cut_off","FPR","TPR")
View(rocr_cutoff)
library(dplyr)
rocr_cutoff$cut_off <- round(rocr_cutoff$cut_off,6)
# Sorting data frame with respect to tpr in decreasing order
rocr_cutoff <- arrange(rocr_cutoff,desc(TPR))
View(rocr_cutoff)
install.packages('AER')
data(Affairs,package="AER")
View(Affairs)
View(Affairs)
model <- ifelse(Affairs>=1,yes,no)
model <- ifelse(Affairs >=1,yes,no)
model <- glm(affairs~.,data =Affairs )
model <- glm(affairs~.,data =Affairs,family = "binomial" )
exp(coef(Affairs))
model2 <- ifelse(Affairs$affairs==0,0,1)
model <- glm(affairs~.,data =Affairs,family = "binomial" )
logit<- glm(aaffairs~factor(gender)+age+yearsmarried+factor(children)+religiousness+education+occupation+rating,family= binomial, data = Affairs)
model <- glm(model2~factor(gender)+age+yearsmarried+factor(children)+religiousness+education+occupation+rating,family= binomial, data = Affairs)
summary(model)
exp(coef(model))
pred <- predict(model,type = c("response"),Affairs)
pred <- predict(model,type = c("response"),Affairs)
pred
plot(pred)
lines(pred,col="red")
confusion <- table(pred>0.90,Affairs$affairs)
confusion
confusion1 <- table(pred>0.75,Affairs$affairs)
confusion1
accuracy <- sum(diag(confusion1)/sum(confusion1))
accuracy
accuracy <- sum(diag(confusion)/sum(confusion))
accuracy
transactions_retail1 <- read.csv("F:/assingment/ASSOCIATION RULE/transactions_retail1.csv")
View(transactions_retail1)
transactions <- lapply(transactions_retail1,as.character)
View(transactions)
library(arules)
library(arulesViz)
test <- transactions[1:500,]
test <- transactions_retail1[1:500,]
transactions <- lapply(test,as.character)
transactions_retail1 <- read.csv("F:/assingment/ASSOCIATION RULE/transactions_retail1.csv")
View(transactions_retail1)
test <- transactions_retail1[1:500,]
transactions <- lapply(test,as.character)
train <- transactions_retail1[501:557040]
train <- transactions_retail1[501:557040,]
transactions <- lapply(test,as.character)
View(transactions)
View(transactions)
library(arules)
library(arulesViz)
rules <- apriori(test,parameter = list(support=0.002,confidence=0.5,minlen=2,maxlen=3))
inspect(rules)
plot(rules)
rules <- apriori(test,parameter = list(support=0.03,confidence=0.5,minlen=2,maxlen=3))
rules <- apriori(test,parameter = list(support=0.03,confidence=0.5,minlen=2,maxlen=3))
inspect(rules)
rules1 <- apriori(test,parameter = list(support=0.03,confidence=0.5,minlen=2,maxlen=3))
inspect(rules1)
rules2 <- apriori(test,parameter = list(support=0.003,confidence=0.5,minlen=2,maxlen=3))
rules3 <- apriori(test,parameter = list(support=0.003,confidence=0.9,minlen=2,maxlen=3))
inspect(rules3)
book <- read.csv("F:/assingment/ASSOCIATION RULE/book.csv")
model<- lapply(book,as.character)
library(arules)
library(arulesViz)
##Applying apriori algorithm to get relevant rules
rules <- apriori(as.matrix(book),parameter = list(support=0.002,confidence=0.5,minlen=2))
inspect(rules)
plot(rules,method = "scatterplot")
plot(rules,method = "grouped")
plot(rules,method = "graph")
plot(rules,method = "mosaic")
